{"version":3,"sources":["types/item.ts","components/FoodCard.tsx","components/FoodCardCart.tsx","store/action-creators/item.ts","hooks/useTypedSelector.ts","App.tsx","hooks/useActions.ts","store/reducers/itemReducer.ts","store/reducers/index.ts","store/index.ts","index.tsx"],"names":["ItemActionTypes","FoodCard","food","addToCard","cart","increaseAmount","useState","clicked","setClicked","className","src","image","alt","name","price","onClick","find","i","id","FoodCardCart","decreaseAmount","removeItemFromCart","totalPrice","Math","round","amount","addItemToCart","payload","dispatch","type","ADD_ITEM_TO_CART","increaseItemAmount","INCREASE_ITEM_AMOUNT","decreaseItemAmount","DECREASE_ITEM_AMOUNT","REMOVE_ITEM_FROM_CART","useTypedSelector","useSelector","App","state","item","items","useDispatch","bindActionCreators","itemActionCreators","UseActions","subTotal","length","map","reduce","prev","next","tax","total","initialState","rootReducer","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.495acfe8.chunk.js","sourcesContent":["export interface ItemState {\n  items: Item[];\n  cart: Item[];\n}\n\nexport interface Item {\n  id: number;\n  name: string;\n  price: number;\n  image: string;\n  amount: number;\n}\n\nexport enum ItemActionTypes {\n  ADD_ITEM_TO_CART = \"ADD_ITEM_TO_CART\",\n  INCREASE_ITEM_AMOUNT = \"INCREASE_ITEM_AMOUNT\",\n  DECREASE_ITEM_AMOUNT = \"DECREASE_ITEM_AMOUNT\",\n  REMOVE_ITEM_FROM_CART = \"REMOVE_ITEM_FROM_CART\",\n}\n\ninterface AddItemToCart {\n  type: ItemActionTypes.ADD_ITEM_TO_CART;\n  payload: number;\n}\n\ninterface IncreaseItemAmount {\n  type: ItemActionTypes.INCREASE_ITEM_AMOUNT;\n  payload: number;\n}\n\ninterface DecreaseItemAmount {\n  type: ItemActionTypes.DECREASE_ITEM_AMOUNT;\n  payload: number;\n}\n\ninterface RemoveItemFromCart {\n  type: ItemActionTypes.REMOVE_ITEM_FROM_CART;\n  payload: number;\n}\n\nexport type ItemAction =\n  | AddItemToCart\n  | IncreaseItemAmount\n  | DecreaseItemAmount\n  | RemoveItemFromCart;\n","import React, { FC, useState } from \"react\";\nimport { Item } from \"../types/item\";\n\ninterface FoodCardProps {\n  food: Item;\n  cart: Item[];\n  addToCard: (id: number) => void;\n  increaseAmount: (id: number) => void;\n}\n\nconst FoodCard: FC<FoodCardProps> = ({\n  food,\n  addToCard,\n  cart,\n  increaseAmount,\n}) => {\n  const [clicked, setClicked] = useState(false);\n\n  const clickHandler = () => {\n    if (cart.find((i) => i.id === food.id)) {\n      increaseAmount(food.id);\n    } else {\n      addToCard(food.id);\n    }\n    setClicked(true);\n  };\n\n  return (\n    <div className=\"food-card\">\n      <div className=\"food-image\">\n        <img src={food.image} alt=\"food\" />\n      </div>\n      <div className=\"food-info\">\n        <p className=\"food-name\">{food.name}</p>\n        <p className=\"food-price\">${food.price}</p>\n        <button\n          className={`add-to-card-btn ${clicked ? \" in-cart\" : \"\"}`}\n          onClick={clickHandler}\n        >\n          {clicked ? \"In Cart\" : \"Add to Cart\"}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default FoodCard;\n","import React, { FC } from \"react\";\nimport { Item } from \"../types/item\";\ninterface FoodCardCartProps {\n  food: Item;\n  increaseAmount: (id: number) => void;\n  decreaseAmount: (id: number) => void;\n  removeItemFromCart: (id: number) => void;\n}\n\nexport const FoodCardCart: FC<FoodCardCartProps> = ({\n  food,\n  increaseAmount,\n  decreaseAmount,\n  removeItemFromCart,\n}) => {\n  const totalPrice = Math.round(food.price * food.amount * 100) / 100;\n\n  if (food.amount === 0) {\n    removeItemFromCart(food.id);\n  }\n\n  return (\n    <div className=\"food-card cart\">\n      <div className=\"food-image cart\">\n        <div className=\"food-amount-on-image\">\n          <p>{food.amount}</p>\n        </div>\n        <img src={food.image} alt=\"food\" />\n      </div>\n      <div className=\"food-info cart\">\n        <p className=\"food-name cart\">{food.name}</p>\n        <p className=\"food-price cart\">${food.price}</p>\n        <div className=\"card-footer\">\n          <div className=\"more-less-block\">\n            <div\n              className=\"less-btn\"\n              onClick={() => decreaseAmount(food.id)}\n            ></div>\n            <div className=\"amount\">{food.amount}</div>\n            <div\n              className=\"more-btn\"\n              onClick={() => increaseAmount(food.id)}\n            ></div>\n          </div>\n          <p className=\"price\">${totalPrice}</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FoodCardCart;\n","import { Dispatch } from \"redux\";\nimport { ItemAction, ItemActionTypes } from \"./../../types/item\";\n\nexport const addItemToCart =\n  (payload: number) => (dispatch: Dispatch<ItemAction>) => {\n    dispatch({ type: ItemActionTypes.ADD_ITEM_TO_CART, payload });\n  };\n\nexport const increaseItemAmount =\n  (payload: number) => (dispatch: Dispatch<ItemAction>) => {\n    dispatch({ type: ItemActionTypes.INCREASE_ITEM_AMOUNT, payload });\n  };\n\nexport const decreaseItemAmount =\n  (payload: number) => (dispatch: Dispatch<ItemAction>) => {\n    dispatch({ type: ItemActionTypes.DECREASE_ITEM_AMOUNT, payload });\n  };\n\nexport const removeItemFromCart =\n  (payload: number) => (dispatch: Dispatch<ItemAction>) => {\n    dispatch({ type: ItemActionTypes.REMOVE_ITEM_FROM_CART, payload });\n  };\n","import { RootState } from \"./../store/reducers/index\";\nimport { TypedUseSelectorHook, useSelector } from \"react-redux\";\n\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import React from \"react\";\nimport \"./App.css\";\nimport FoodCard from \"./components/FoodCard\";\nimport FoodCardCart from \"./components/FoodCardCart\";\nimport { UseActions } from \"./hooks/useActions\";\nimport { useTypedSelector } from \"./hooks/useTypedSelector\";\n\nfunction App() {\n  const { items, cart } = useTypedSelector((state) => state.item);\n\n  const {\n    addItemToCart,\n    increaseItemAmount,\n    decreaseItemAmount,\n    removeItemFromCart,\n  } = UseActions();\n\n  const subTotal =\n    Math.round(\n      cart.length &&\n        cart\n          .map((i) => i.price * i.amount)\n          .reduce((prev, next) => prev + next) * 100\n    ) / 100;\n  const tax = Math.round(subTotal * 0.0975 * 100) / 100;\n  const total = Math.round((subTotal + tax) * 100) / 100;\n\n  return (\n    <div className=\"app\">\n      <div className=\"container\">\n        <h1 className=\"title\">To Go Menu</h1>\n        {items.map((item) => (\n          <FoodCard\n            key={item.id}\n            food={item}\n            cart={cart}\n            addToCard={addItemToCart}\n            increaseAmount={increaseItemAmount}\n          />\n        ))}\n      </div>\n      <div className=\"container\">\n        <h1 className=\"title\">Your Cart</h1>\n        {cart.length ? (\n          <>\n            {cart.map((item) => (\n              <>\n                <FoodCardCart\n                  key={item.id}\n                  food={item}\n                  decreaseAmount={decreaseItemAmount}\n                  increaseAmount={increaseItemAmount}\n                  removeItemFromCart={removeItemFromCart}\n                />\n                <div className=\"decor-line\" />\n              </>\n            ))}\n            <div className=\"decor-line bold\" />\n            <div className=\"price-box\">\n              <p className=\"subtitle\">Subtotal:</p>\n              <p className=\"price\">${subTotal}</p>\n            </div>\n            <div className=\"price-box\">\n              <p className=\"subtitle\">Tax:</p>\n              <p className=\"price\">${tax}</p>\n            </div>\n            <div className=\"price-box\">\n              <p className=\"subtitle\">Total:</p>\n              <p className=\"price total\">${total}</p>\n            </div>\n          </>\n        ) : (\n          <p className=\"empty-cart\">Your cart is empty.</p>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { useDispatch } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport * as itemActionCreators from \"../store/action-creators/item\";\n\nexport const UseActions = () => {\n  const dispatch = useDispatch();\n  return bindActionCreators(itemActionCreators, dispatch);\n};\n","import { ItemState, ItemAction, ItemActionTypes } from \"../../types/item\";\n\nconst initialState: ItemState = {\n  items: [\n    {\n      id: 1,\n      name: \"French Fries with Ketchup\",\n      price: 2.23,\n      image: \"./assets/images/plate__french-fries.png\",\n      amount: 1,\n    },\n    {\n      id: 2,\n      name: \"Salmon and Vegetables\",\n      price: 5.12,\n      image: \"./assets/images/plate__salmon-vegetables.png\",\n      amount: 1,\n    },\n    {\n      id: 3,\n      name: \"Spaghetti with Sauce\",\n      price: 7.02,\n      image: \"./assets/images/plate__spaghetti-meat-sauce.png\",\n      amount: 1,\n    },\n    {\n      id: 4,\n      name: \"Fish sticks anf Fries\",\n      price: 6.03,\n      image: \"./assets/images/plate__fish-sticks-fries.png\",\n      amount: 1,\n    },\n    {\n      id: 5,\n      name: \"Tortellini\",\n      price: 3.52,\n      image: \"./assets/images/plate__tortellini.png\",\n      amount: 1,\n    },\n  ],\n  cart: [],\n};\n\nexport const itemReducer = (\n  state = initialState,\n  action: ItemAction\n): ItemState => {\n  switch (action.type) {\n    case ItemActionTypes.ADD_ITEM_TO_CART:\n      return {\n        ...state,\n        cart: [\n          ...state.items.filter((i) => i.id === action.payload),\n          ...state.cart,\n        ],\n      };\n    case ItemActionTypes.INCREASE_ITEM_AMOUNT:\n      return {\n        ...state,\n        cart: state.cart.map((i) =>\n          i.id === action.payload ? { ...i, amount: i.amount + 1 } : i\n        ),\n      };\n    case ItemActionTypes.DECREASE_ITEM_AMOUNT:\n      return {\n        ...state,\n        cart: state.cart.map((i) =>\n          i.id === action.payload ? { ...i, amount: i.amount - 1 } : i\n        ),\n      };\n    case ItemActionTypes.REMOVE_ITEM_FROM_CART:\n      return {\n        ...state,\n        cart: state.cart.filter((i) => i.id !== action.payload),\n      };\n\n    default:\n      return state;\n  }\n};\n","import { itemReducer } from \"./itemReducer\";\nimport { combineReducers } from \"redux\";\n\nexport const rootReducer = combineReducers({\n  item: itemReducer,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n","import { rootReducer } from \"./reducers/index\";\nimport { applyMiddleware, createStore } from \"redux\";\nimport thunk from \"redux-thunk\";\n\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport { store } from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}